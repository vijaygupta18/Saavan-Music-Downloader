<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Saavan Downloader</title>
    <link rel="shortcut icon" href="https://iconape.com/wp-content/png_logo_vector/saavn-icon-logo.png" type="image/x-icon">
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css">
    <link rel="stylesheet" href="../home.css">
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Open+Sans:wght@600&display=swap');
        @import url('https://fonts.googleapis.com/css2?family=Potta+One&family=Yusei+Magic&display=swap');
        
    </style>
</head>
<body>
    <br><br>
    <h3 class="head"> Saavan Song Downloader</h3>
    <div class="ani">
        <div class="ani-cover">
            <span class="ani-text"></span>

        </div>
    </div>
    <form action="/" method="POST">
    <div class="b2">
        <div class="input-btn-cover">
            <input class="input" name="song" type="text" placeholder="Enter Your Song">
            <button id="btn" type="submit" class="button is-info" >Search</button>
        </div>
    </div>
</form>

  

<% if(songs!=""){ %>
    <div class="box">
   <%for(let s in songs){ %>
       <% if(songs[s]!=undefined){ %>
    <!-- <li><%=songs[s].song %></li> -->
    <div class="card">
        <img src="<%=songs[s].thumbnail %>" style="width: 150px;height: 150px;margin: auto;margin-top: 20px;border-radius: 10px;" alt="Avatar" style="width:100%">
        <div class="container">
          <h4><b>Title:<%=songs[s].song %></b></h4> 
          <p>Artist:<%=songs[s].singers %></p> 
          <p class="down" onclick="download(`<%=songs[s].url %>`,`<%=songs[s].song %>.mp3`)">Download</p>
          <br>
        </div>
      </div>
     <%  }%>
    <% }%>
    </div>
    <% }
    %>
</body>
</html>

<script>
    function download(url, fileName) {
        console.log(url)
    var xhr = new XMLHttpRequest();
    xhr.open('GET', url, true);
    xhr.responseType = 'blob';

    xhr.onprogress = function(event) {
        if (event.lengthComputable) {
            var percentComplete = (event.loaded / event.total)*100;
            //yourShowProgressFunction(percentComplete);
        } 
    };

    xhr.onload = function(event) {
        if (this.status == 200) {
            _saveBlob(this.response, fileName);
        }
        else {
            //yourErrorFunction()
        }
    };

    xhr.onerror = function(event){
        //yourErrorFunction()
    };

    xhr.send();
}


function _saveBlob(response, fileName) {
    if(navigator.msSaveBlob){
        //OK for IE10+
        navigator.msSaveBlob(response, fileName);
    }
    else{
        _html5Saver(response, fileName);
    }
}

function _html5Saver(blob , fileName) {
    var a = document.createElement("a");
    document.body.appendChild(a);
    a.style = "display: none";
    var url = window.URL.createObjectURL(blob);
    a.href = url;
    a.download = fileName;
    a.click();
    document.body.removeChild(a);
}
</script>